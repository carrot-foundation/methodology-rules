name: Check and Deploy

permissions: write-all # required for AWS credentials

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  affected:
    name: Get affected
    runs-on: ubuntu-latest

    outputs:
      backend: ${{ steps.affected.outputs.backend }}
      upload-lambda: ${{ steps.affected.outputs.upload-lambda }}

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0 # required for Nx affected

      - uses: ./.github/actions/prepare-to-run-nx
        with:
          environment: development
          aws_account_id_production: ${{ secrets.AWS_ACCOUNT_ID_PRODUCTION }}
          aws_account_id_development: ${{ secrets.AWS_ACCOUNT_ID_DEVELOPMENT }}
          nx_key: ${{ secrets.NX_KEY }}

      - id: affected
        run: |
          echo "backend=$([ $(pnpm nx show projects -t lint ts --affected --json) = '[]' ] && echo 'false' || echo 'true')" >> $GITHUB_OUTPUT
          echo "upload-lambda=$([ $(pnpm nx show projects -t upload-lambda --affected --json) = '[]' ] && echo 'false' || echo 'true')" >> $GITHUB_OUTPUT

  backend-check:
    name: Backend Check
    needs: affected
    uses: ./.github/workflows/backend-check.yaml
    secrets: inherit
    with:
      skip: ${{ needs.affected.outputs.backend != 'true' }}

  deploy:
    name: Deploy
    needs: [affected, backend-check]
    if: ${{ github.ref_name == 'main' && needs.affected.outputs.upload-lambda == 'true' && (needs.backend-check.result == 'success' || needs.backend-check.result == 'skipped') }}
    uses: ./.github/workflows/deploy.yaml
    secrets:
      AWS_ACCOUNT_ID_PRODUCTION: ${{ secrets.AWS_ACCOUNT_ID_PRODUCTION }}
      AWS_ACCOUNT_ID_DEVELOPMENT: ${{ secrets.AWS_ACCOUNT_ID_DEVELOPMENT }}
      ADMIN_GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}
      nx_key: ${{ secrets.NX_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
