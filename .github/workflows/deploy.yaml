name: Deploy

permissions: write-all

on:
  workflow_call:

jobs:
  package-lambda:
    name: Package Lambda
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0 # required for Nx affected
      - uses: ./.github/actions/prepare-to-run-nx
      - run: pnpm nx affected --target=package-lambda --configuration=production

  upload-lambda:
    name: Upload Lambda to S3
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [package-lambda]

    env:
      AWS_REGION: us-east-1

    strategy:
      matrix:
        include:
          - environment: production
            AWS_ACCOUNT_ID: "629216831935"

          - environment: development
            AWS_ACCOUNT_ID: "954701063678"

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }} # required for git push
          fetch-depth: 0 # required for Nx affected

      - uses: ./.github/actions/prepare-to-run-nx

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::${{ matrix.AWS_ACCOUNT_ID }}:role/GitHubActions-Elrond
          aws-region: ${{ env.AWS_REGION }}

      - name: Create a temporary document to concatenate metadata from rule lambdas
        run: echo '{"metadata-rules":[' > lambda-rules-metadata.json

      - run: pnpm nx affected --target=upload-lambda --configuration=production --environment=${{ matrix.environment }}

      - name: Upload to S3 bucket
        run: echo ']}' >> lambda-rules-metadata.json
        run: aws s3 cp lambda-rules-metadata.json s3://elrond-${{ matrix.environment }}-lambda-rules-metadata/lambda-rules-metadata.json

      - name: Report failed deployment
        uses: ./.github/actions/send-slack-message
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ vars.SLACK_WEBHOOK_URL_DEPLOY_FAILED }}
          message: Deploy Failed
