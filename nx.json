{
  "pluginsConfig": {
    "@nx/js": {
      "analyzeSourceFiles": true
    }
  },
  "extends": "nx/presets/npm.json",
  "$schema": "./node_modules/nx/schemas/nx-schema.json",
  "tasksRunnerOptions": {
    "default": {
      "runner": "nx/tasks-runners/default",
      "options": {
        "cacheableOperations": [
          "build-lambda",
          "test",
          "lint",
          "ts",
          "package-lambda"
        ]
      }
    }
  },
  "s3": {
    "region": "us-east-1",
    "bucket": "methodology-rules-nx-cache"
  },
  "targetDefaults": {
    "test": {
      "executor": "@nx/jest:jest",
      "inputs": ["test", "^production"],
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "{projectRoot}/jest.config.ts",
        "coverageDirectory": "{workspaceRoot}/coverage/{projectRoot}",
        "maxWorkers": "50%",
        "resetMocks": true,
        "codeCoverage": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "reporters": ["github-actions", "jest-silent-reporter"]
        }
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "inputs": ["lint", "^production"],
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["{projectRoot}/**/*.{ts,tsx,js,jsx,json,yaml}"]
      }
    },
    "ts": {
      "executor": "nx:run-commands",
      "inputs": ["ts", "^production"],
      "options": {
        "command": "pnpm tsc -p {projectRoot}/tsconfig.eslint.json --noEmit"
      }
    },
    "build-lambda": {
      "executor": "@nx/webpack:webpack",
      "inputs": [
        "build",
        "^production",
        "{workspaceRoot}/.webpack/webpack.nx.config.js"
      ],
      "outputs": ["{options.outputPath}"],
      "options": {
        "compiler": "tsc",
        "target": "node",
        "main": "{projectRoot}/src/lambda.ts",
        "tsConfig": "{projectRoot}/tsconfig.build.json",
        "webpackConfig": "{workspaceRoot}/.webpack/webpack.nx.config.js",
        "outputPath": "{workspaceRoot}/dist/.dev/{projectRoot}",
        "generatePackageJson": true
      },
      "configurations": {
        "production": {
          "outputPath": "{workspaceRoot}/dist/.prod/{projectRoot}",
          "optimization": true
        }
      }
    },
    "package-lambda": {
      "executor": "nx:run-commands",
      "inputs": [
        "build",
        "^production",
        "{workspaceRoot}/scripts/package-lambda.sh"
      ],
      "dependsOn": ["build-lambda"],
      "outputs": ["{options.zipPath}"],
      "options": {
        "command": "{workspaceRoot}/scripts/package-lambda.sh {args.buildPath} {args.zipPath}",
        "buildPath": "{workspaceRoot}/dist/.prod/{projectRoot}",
        "zipPath": "{workspaceRoot}/dist/.zip/{projectName}.zip"
      }
    },
    "upload-lambda": {
      "executor": "nx:run-commands",
      "inputs": [
        "build",
        "^production",
        "{workspaceRoot}/scripts/package-lambda.sh",
        "{workspaceRoot}/scripts/upload-lambda.sh"
      ],
      "parallelism": false,
      "dependsOn": ["package-lambda"],
      "options": {
        "commands": [
          "{workspaceRoot}/scripts/upload-lambda.sh {projectRoot} {args.zipPath} {args.environment}",
          "rm -rf {args.zipPath}"
        ],
        "parallel": false,
        "zipPath": "{workspaceRoot}/dist/.zip/{projectName}.zip",
        "environment": "development"
      }
    }
  },
  "namedInputs": {
    "node": [
      {
        "runtime": "node --version"
      }
    ],
    "src": ["{projectRoot}/src/**/*"],
    "production": [
      "src",
      "!{projectRoot}/**/?(*.)+(spec|test|stubs).[jt]s?(x)?(.snap)",
      "!{projectRoot}/**/testing/**"
    ],
    "ts": [
      "node",
      "src",
      "{projectRoot}/tsconfig.json",
      "{projectRoot}/tsconfig.eslint.json",
      "{workspaceRoot}/tsconfig.base.json"
    ],
    "lint": [
      "node",
      "ts",
      "{workspaceRoot}/.eslint/eslint.config.js",
      "{workspaceRoot}/eslint.config.js",
      "{workspaceRoot}/.eslintignore"
    ],
    "build": [
      "production",
      "{workspaceRoot}/tsconfig.base.json",
      "{projectRoot}/tsconfig?(.build).json"
    ],
    "test": [
      "node",
      "src",
      "{workspaceRoot}/tsconfig.base.json",
      "{workspaceRoot}/.env-files/.env.test",
      "{workspaceRoot}/.tsconfig/tsconfig.spec.json",
      "{workspaceRoot}/jest.preset.js",
      "{workspaceRoot}/jest.config.ts",
      "{workspaceRoot}/.jest/**/*.ts",
      "{projectRoot}/jest.config.ts",
      "{projectRoot}/tsconfig.spec.json"
    ]
  }
}
